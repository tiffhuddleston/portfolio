{"version":3,"sources":["components/NavBar.js","components/Home.js","components/About.js","components/MyWork.js","components/Skills.js","components/Blog.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Container","Navbar","expand","href","Home","id","Jumbotron","About","MyWork","classname","Carousel","Item","Card","style","width","Img","variant","src","Body","Title","Text","ButtonGroup","size","Button","target","Skills","Blog","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca265cdd.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\n\nfunction NavBar() {\n  return (\n    <header className=\"nav-bar\">\n      <Container>\n        <Navbar expand=\"lg\">\n          <nav>\n            <a className=\"topic\" href=\"#home\">\n              Home\n            </a>\n            <a className=\"topic\" href=\"#about\">\n              About Me\n            </a>\n            <a className=\"topic\" href=\"#mywork\">\n              My Work\n            </a>\n            <a className=\"topic\" href=\"#skills\">\n              Skills\n            </a>\n            <a className=\"topic\" href=\"#blog\">\n              Blog\n            </a>\n          </nav>\n        </Navbar>\n      </Container>\n    </header>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\n\nfunction Home() {\n  return (\n    <section id=\"home\">\n      <Jumbotron>\n        <h1>Tiffany Huddleston</h1>\n        <h3>Full Stack Software Engineer</h3>\n      </Jumbotron>\n    </section>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <section id=\"about\">\n      <div>\n        <h1>About</h1>\n      </div>\n    </section>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport { Carousel, Card, Button, ButtonGroup } from 'react-bootstrap';\n\nfunction MyWork() {\n  return (\n    <>\n      <section id=\"mywork\">\n        <header classname=\"work\">\n          <h1>My Work</h1>\n        </header>\n        <Carousel className=\"carousel\">\n          <Carousel.Item>\n            <Card style={{ width: '35rem' }}>\n              <Card.Img variant=\"top\" src=\"../images/RickandMorty.png\" />\n              <Card.Body>\n                <Card.Title>Rick and Morty Search</Card.Title>\n                <Card.Text>\n                  Deployed React app using hooks, React-Bootstrap, and a RESTful\n                  API.\n                </Card.Text>\n                <div className=\"d-flex flex-column\">\n                  <ButtonGroup size=\"lg\">\n                    <Button\n                      href=\"https://github.com/tiffhuddleston/angry-anteater\"\n                      target=\"_blank\"\n                    >\n                      Code\n                    </Button>\n\n                    <Button\n                      href=\"https://angry-anteater.herokuapp.com/\"\n                      target=\"_blank\"\n                    >\n                      Deployed App\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </Card.Body>\n            </Card>\n          </Carousel.Item>\n          <Carousel.Item>\n            <Card style={{ width: '35rem' }}>\n              <Card.Img variant=\"top\" src=\"../images/GatherUp.png\" />\n              <Card.Body>\n                <Card.Title>GatherUp</Card.Title>\n                <Card.Text>\n                  A small-town event page alternative to EventBrite or\n                  TicketMaster using a full MERN stack.\n                </Card.Text>\n                <div className=\"d-flex flex-column\">\n                  <ButtonGroup size=\"lg\">\n                    <Button\n                      href=\"https://github.com/2magpies/ibcc-frontend\"\n                      target=\"_blank\"\n                    >\n                      Frontend Code\n                    </Button>\n                    <Button\n                      href=\"https://github.com/2magpies/ibcc-backend\"\n                      target=\"_blank\"\n                    >\n                      Backend Code\n                    </Button>\n                    <Button\n                      href=\"https://gatherupapp.herokuapp.com/\"\n                      target=\"_blank\"\n                    >\n                      Deployed App\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </Card.Body>\n            </Card>\n          </Carousel.Item>\n          <Carousel.Item>\n            <Card style={{ width: '35rem' }}>\n              <Card.Img variant=\"top\" src=\"../images/nerd-trivia.png\" />\n              <Card.Body>\n                <Card.Title>Nerd Trivia</Card.Title>\n                <Card.Text>\n                  A simple trivia game written with CSS, HTML and vanilla\n                  JavaScript.\n                </Card.Text>\n                <div className=\"d-flex flex-column\">\n                  <ButtonGroup size=\"lg\">\n                    <Button\n                      href=\"https://github.com/tiffhuddleston/nerd-game\"\n                      target=\"_blank\"\n                    >\n                      Code\n                    </Button>\n\n                    <Button\n                      href=\"https://tiffhuddleston.github.io/nerd-game/\"\n                      target=\"_blank\"\n                    >\n                      Deployed App\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </Card.Body>\n            </Card>\n          </Carousel.Item>\n        </Carousel>\n      </section>\n    </>\n  );\n}\n\nexport default MyWork;\n","import React from 'react';\n\nfunction Skills() {\n  return (\n    <section id=\"skills\">\n      <div>\n        <h1>Skills</h1>\n      </div>\n    </section>\n  );\n}\n\nexport default Skills;\n","import React from 'react';\n\nfunction Blog() {\n  return (\n    <section id=\"blog\">\n      <div>\n        <h1>Blog</h1>\n      </div>\n    </section>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport MyWork from './components/MyWork';\nimport Skills from './components/Skills';\nimport Blog from './components/Blog';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Home />\n      <About />\n      <MyWork />\n      <Skills />\n      <Blog />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}